// Generated from OpeningTimesLexer.g4 by ANTLR 4.13.2
import org.antlr.v4.runtime.Lexer;
import org.antlr.v4.runtime.CharStream;
import org.antlr.v4.runtime.Token;
import org.antlr.v4.runtime.TokenStream;
import org.antlr.v4.runtime.*;
import org.antlr.v4.runtime.atn.*;
import org.antlr.v4.runtime.dfa.DFA;
import org.antlr.v4.runtime.misc.*;

@SuppressWarnings({"all", "warnings", "unchecked", "unused", "cast", "CheckReturnValue", "this-escape"})
public class OpeningTimesLexer extends Lexer {
	static { RuntimeMetaData.checkVersion("4.13.2", RuntimeMetaData.VERSION); }

	protected static final DFA[] _decisionToDFA;
	protected static final PredictionContextCache _sharedContextCache =
		new PredictionContextCache();
	public static final int
		WHITESPACE=1, KW_BIS=2, KW_TAEGLICH=3, KW_RUHETAG=4, KW_AN=5, KW_FREITAG=6, 
		KW_MONTAG=7, KW_DIENSTAG=8, KW_MITTWOCH=9, KW_DONNERSTAG=10, KW_SAMSTAG=11, 
		KW_SONNTAG=12, KW_VORUEBERGEHEND=13, KW_GESCHLOSSEN=14, KW_BEI=15, KW_GUTEM_WETTER=16, 
		KW_UHR=17, NUMBER=18, DATE=19, TIME=20, ID=21, DOT=22, COMMA=23, MINUS=24, 
		COLON=25;
	public static String[] channelNames = {
		"DEFAULT_TOKEN_CHANNEL", "HIDDEN"
	};

	public static String[] modeNames = {
		"DEFAULT_MODE"
	};

	private static String[] makeRuleNames() {
		return new String[] {
			"WHITESPACE", "KW_BIS", "KW_TAEGLICH", "KW_RUHETAG", "KW_AN", "KW_FREITAG", 
			"KW_MONTAG", "KW_DIENSTAG", "KW_MITTWOCH", "KW_DONNERSTAG", "KW_SAMSTAG", 
			"KW_SONNTAG", "KW_VORUEBERGEHEND", "KW_GESCHLOSSEN", "KW_BEI", "KW_GUTEM_WETTER", 
			"KW_UHR", "NUMBER", "DATE", "TIME", "ID", "DOT", "COMMA", "MINUS", "COLON"
		};
	}
	public static final String[] ruleNames = makeRuleNames();

	private static String[] makeLiteralNames() {
		return new String[] {
			null, null, "'bis'", "'t\\u00C3\\u00A4glich'", "'Ruhetag'", "'an'", "'Freitag'", 
			"'Montag'", "'Dienstag'", "'Mittwoch'", "'Donnerstag'", "'Samstag'", 
			"'Sonntag'", "'vor\\u00C3\\u00BCbergehend'", "'geschlossen'", "'bei'", 
			"'gutem Wetter'", "'Uhr'", null, null, null, null, "'.'", "','", "'-'", 
			"':'"
		};
	}
	private static final String[] _LITERAL_NAMES = makeLiteralNames();
	private static String[] makeSymbolicNames() {
		return new String[] {
			null, "WHITESPACE", "KW_BIS", "KW_TAEGLICH", "KW_RUHETAG", "KW_AN", "KW_FREITAG", 
			"KW_MONTAG", "KW_DIENSTAG", "KW_MITTWOCH", "KW_DONNERSTAG", "KW_SAMSTAG", 
			"KW_SONNTAG", "KW_VORUEBERGEHEND", "KW_GESCHLOSSEN", "KW_BEI", "KW_GUTEM_WETTER", 
			"KW_UHR", "NUMBER", "DATE", "TIME", "ID", "DOT", "COMMA", "MINUS", "COLON"
		};
	}
	private static final String[] _SYMBOLIC_NAMES = makeSymbolicNames();
	public static final Vocabulary VOCABULARY = new VocabularyImpl(_LITERAL_NAMES, _SYMBOLIC_NAMES);

	/**
	 * @deprecated Use {@link #VOCABULARY} instead.
	 */
	@Deprecated
	public static final String[] tokenNames;
	static {
		tokenNames = new String[_SYMBOLIC_NAMES.length];
		for (int i = 0; i < tokenNames.length; i++) {
			tokenNames[i] = VOCABULARY.getLiteralName(i);
			if (tokenNames[i] == null) {
				tokenNames[i] = VOCABULARY.getSymbolicName(i);
			}

			if (tokenNames[i] == null) {
				tokenNames[i] = "<INVALID>";
			}
		}
	}

	@Override
	@Deprecated
	public String[] getTokenNames() {
		return tokenNames;
	}

	@Override

	public Vocabulary getVocabulary() {
		return VOCABULARY;
	}


	public OpeningTimesLexer(CharStream input) {
		super(input);
		_interp = new LexerATNSimulator(this,_ATN,_decisionToDFA,_sharedContextCache);
	}

	@Override
	public String getGrammarFileName() { return "OpeningTimesLexer.g4"; }

	@Override
	public String[] getRuleNames() { return ruleNames; }

	@Override
	public String getSerializedATN() { return _serializedATN; }

	@Override
	public String[] getChannelNames() { return channelNames; }

	@Override
	public String[] getModeNames() { return modeNames; }

	@Override
	public ATN getATN() { return _ATN; }

	public static final String _serializedATN =
		"\u0004\u0000\u0019\u00df\u0006\uffff\uffff\u0002\u0000\u0007\u0000\u0002"+
		"\u0001\u0007\u0001\u0002\u0002\u0007\u0002\u0002\u0003\u0007\u0003\u0002"+
		"\u0004\u0007\u0004\u0002\u0005\u0007\u0005\u0002\u0006\u0007\u0006\u0002"+
		"\u0007\u0007\u0007\u0002\b\u0007\b\u0002\t\u0007\t\u0002\n\u0007\n\u0002"+
		"\u000b\u0007\u000b\u0002\f\u0007\f\u0002\r\u0007\r\u0002\u000e\u0007\u000e"+
		"\u0002\u000f\u0007\u000f\u0002\u0010\u0007\u0010\u0002\u0011\u0007\u0011"+
		"\u0002\u0012\u0007\u0012\u0002\u0013\u0007\u0013\u0002\u0014\u0007\u0014"+
		"\u0002\u0015\u0007\u0015\u0002\u0016\u0007\u0016\u0002\u0017\u0007\u0017"+
		"\u0002\u0018\u0007\u0018\u0001\u0000\u0004\u00005\b\u0000\u000b\u0000"+
		"\f\u00006\u0001\u0000\u0001\u0000\u0001\u0001\u0001\u0001\u0001\u0001"+
		"\u0001\u0001\u0001\u0002\u0001\u0002\u0001\u0002\u0001\u0002\u0001\u0002"+
		"\u0001\u0002\u0001\u0002\u0001\u0002\u0001\u0002\u0001\u0003\u0001\u0003"+
		"\u0001\u0003\u0001\u0003\u0001\u0003\u0001\u0003\u0001\u0003\u0001\u0003"+
		"\u0001\u0004\u0001\u0004\u0001\u0004\u0001\u0005\u0001\u0005\u0001\u0005"+
		"\u0001\u0005\u0001\u0005\u0001\u0005\u0001\u0005\u0001\u0005\u0001\u0006"+
		"\u0001\u0006\u0001\u0006\u0001\u0006\u0001\u0006\u0001\u0006\u0001\u0006"+
		"\u0001\u0007\u0001\u0007\u0001\u0007\u0001\u0007\u0001\u0007\u0001\u0007"+
		"\u0001\u0007\u0001\u0007\u0001\u0007\u0001\b\u0001\b\u0001\b\u0001\b\u0001"+
		"\b\u0001\b\u0001\b\u0001\b\u0001\b\u0001\t\u0001\t\u0001\t\u0001\t\u0001"+
		"\t\u0001\t\u0001\t\u0001\t\u0001\t\u0001\t\u0001\t\u0001\n\u0001\n\u0001"+
		"\n\u0001\n\u0001\n\u0001\n\u0001\n\u0001\n\u0001\u000b\u0001\u000b\u0001"+
		"\u000b\u0001\u000b\u0001\u000b\u0001\u000b\u0001\u000b\u0001\u000b\u0001"+
		"\f\u0001\f\u0001\f\u0001\f\u0001\f\u0001\f\u0001\f\u0001\f\u0001\f\u0001"+
		"\f\u0001\f\u0001\f\u0001\f\u0001\f\u0001\f\u0001\r\u0001\r\u0001\r\u0001"+
		"\r\u0001\r\u0001\r\u0001\r\u0001\r\u0001\r\u0001\r\u0001\r\u0001\r\u0001"+
		"\u000e\u0001\u000e\u0001\u000e\u0001\u000e\u0001\u000f\u0001\u000f\u0001"+
		"\u000f\u0001\u000f\u0001\u000f\u0001\u000f\u0001\u000f\u0001\u000f\u0001"+
		"\u000f\u0001\u000f\u0001\u000f\u0001\u000f\u0001\u000f\u0001\u0010\u0001"+
		"\u0010\u0001\u0010\u0001\u0010\u0001\u0011\u0004\u0011\u00c0\b\u0011\u000b"+
		"\u0011\f\u0011\u00c1\u0001\u0012\u0001\u0012\u0001\u0012\u0001\u0012\u0004"+
		"\u0012\u00c8\b\u0012\u000b\u0012\f\u0012\u00c9\u0001\u0013\u0001\u0013"+
		"\u0001\u0013\u0001\u0013\u0001\u0013\u0001\u0013\u0001\u0013\u0001\u0014"+
		"\u0004\u0014\u00d4\b\u0014\u000b\u0014\f\u0014\u00d5\u0001\u0015\u0001"+
		"\u0015\u0001\u0016\u0001\u0016\u0001\u0017\u0001\u0017\u0001\u0018\u0001"+
		"\u0018\u0000\u0000\u0019\u0001\u0001\u0003\u0002\u0005\u0003\u0007\u0004"+
		"\t\u0005\u000b\u0006\r\u0007\u000f\b\u0011\t\u0013\n\u0015\u000b\u0017"+
		"\f\u0019\r\u001b\u000e\u001d\u000f\u001f\u0010!\u0011#\u0012%\u0013\'"+
		"\u0014)\u0015+\u0016-\u0017/\u00181\u0019\u0001\u0000\u0005\u0003\u0000"+
		"\t\n\r\r  \u0001\u000009\u0001\u0000AZ\u0001\u0000az\u0002\u0000AZaz\u00e2"+
		"\u0000\u0001\u0001\u0000\u0000\u0000\u0000\u0003\u0001\u0000\u0000\u0000"+
		"\u0000\u0005\u0001\u0000\u0000\u0000\u0000\u0007\u0001\u0000\u0000\u0000"+
		"\u0000\t\u0001\u0000\u0000\u0000\u0000\u000b\u0001\u0000\u0000\u0000\u0000"+
		"\r\u0001\u0000\u0000\u0000\u0000\u000f\u0001\u0000\u0000\u0000\u0000\u0011"+
		"\u0001\u0000\u0000\u0000\u0000\u0013\u0001\u0000\u0000\u0000\u0000\u0015"+
		"\u0001\u0000\u0000\u0000\u0000\u0017\u0001\u0000\u0000\u0000\u0000\u0019"+
		"\u0001\u0000\u0000\u0000\u0000\u001b\u0001\u0000\u0000\u0000\u0000\u001d"+
		"\u0001\u0000\u0000\u0000\u0000\u001f\u0001\u0000\u0000\u0000\u0000!\u0001"+
		"\u0000\u0000\u0000\u0000#\u0001\u0000\u0000\u0000\u0000%\u0001\u0000\u0000"+
		"\u0000\u0000\'\u0001\u0000\u0000\u0000\u0000)\u0001\u0000\u0000\u0000"+
		"\u0000+\u0001\u0000\u0000\u0000\u0000-\u0001\u0000\u0000\u0000\u0000/"+
		"\u0001\u0000\u0000\u0000\u00001\u0001\u0000\u0000\u0000\u00014\u0001\u0000"+
		"\u0000\u0000\u0003:\u0001\u0000\u0000\u0000\u0005>\u0001\u0000\u0000\u0000"+
		"\u0007G\u0001\u0000\u0000\u0000\tO\u0001\u0000\u0000\u0000\u000bR\u0001"+
		"\u0000\u0000\u0000\rZ\u0001\u0000\u0000\u0000\u000fa\u0001\u0000\u0000"+
		"\u0000\u0011j\u0001\u0000\u0000\u0000\u0013s\u0001\u0000\u0000\u0000\u0015"+
		"~\u0001\u0000\u0000\u0000\u0017\u0086\u0001\u0000\u0000\u0000\u0019\u008e"+
		"\u0001\u0000\u0000\u0000\u001b\u009d\u0001\u0000\u0000\u0000\u001d\u00a9"+
		"\u0001\u0000\u0000\u0000\u001f\u00ad\u0001\u0000\u0000\u0000!\u00ba\u0001"+
		"\u0000\u0000\u0000#\u00bf\u0001\u0000\u0000\u0000%\u00c3\u0001\u0000\u0000"+
		"\u0000\'\u00cb\u0001\u0000\u0000\u0000)\u00d3\u0001\u0000\u0000\u0000"+
		"+\u00d7\u0001\u0000\u0000\u0000-\u00d9\u0001\u0000\u0000\u0000/\u00db"+
		"\u0001\u0000\u0000\u00001\u00dd\u0001\u0000\u0000\u000035\u0007\u0000"+
		"\u0000\u000043\u0001\u0000\u0000\u000056\u0001\u0000\u0000\u000064\u0001"+
		"\u0000\u0000\u000067\u0001\u0000\u0000\u000078\u0001\u0000\u0000\u0000"+
		"89\u0006\u0000\u0000\u00009\u0002\u0001\u0000\u0000\u0000:;\u0005b\u0000"+
		"\u0000;<\u0005i\u0000\u0000<=\u0005s\u0000\u0000=\u0004\u0001\u0000\u0000"+
		"\u0000>?\u0005t\u0000\u0000?@\u0005\u00c3\u0000\u0000@A\u0005\u00a4\u0000"+
		"\u0000AB\u0005g\u0000\u0000BC\u0005l\u0000\u0000CD\u0005i\u0000\u0000"+
		"DE\u0005c\u0000\u0000EF\u0005h\u0000\u0000F\u0006\u0001\u0000\u0000\u0000"+
		"GH\u0005R\u0000\u0000HI\u0005u\u0000\u0000IJ\u0005h\u0000\u0000JK\u0005"+
		"e\u0000\u0000KL\u0005t\u0000\u0000LM\u0005a\u0000\u0000MN\u0005g\u0000"+
		"\u0000N\b\u0001\u0000\u0000\u0000OP\u0005a\u0000\u0000PQ\u0005n\u0000"+
		"\u0000Q\n\u0001\u0000\u0000\u0000RS\u0005F\u0000\u0000ST\u0005r\u0000"+
		"\u0000TU\u0005e\u0000\u0000UV\u0005i\u0000\u0000VW\u0005t\u0000\u0000"+
		"WX\u0005a\u0000\u0000XY\u0005g\u0000\u0000Y\f\u0001\u0000\u0000\u0000"+
		"Z[\u0005M\u0000\u0000[\\\u0005o\u0000\u0000\\]\u0005n\u0000\u0000]^\u0005"+
		"t\u0000\u0000^_\u0005a\u0000\u0000_`\u0005g\u0000\u0000`\u000e\u0001\u0000"+
		"\u0000\u0000ab\u0005D\u0000\u0000bc\u0005i\u0000\u0000cd\u0005e\u0000"+
		"\u0000de\u0005n\u0000\u0000ef\u0005s\u0000\u0000fg\u0005t\u0000\u0000"+
		"gh\u0005a\u0000\u0000hi\u0005g\u0000\u0000i\u0010\u0001\u0000\u0000\u0000"+
		"jk\u0005M\u0000\u0000kl\u0005i\u0000\u0000lm\u0005t\u0000\u0000mn\u0005"+
		"t\u0000\u0000no\u0005w\u0000\u0000op\u0005o\u0000\u0000pq\u0005c\u0000"+
		"\u0000qr\u0005h\u0000\u0000r\u0012\u0001\u0000\u0000\u0000st\u0005D\u0000"+
		"\u0000tu\u0005o\u0000\u0000uv\u0005n\u0000\u0000vw\u0005n\u0000\u0000"+
		"wx\u0005e\u0000\u0000xy\u0005r\u0000\u0000yz\u0005s\u0000\u0000z{\u0005"+
		"t\u0000\u0000{|\u0005a\u0000\u0000|}\u0005g\u0000\u0000}\u0014\u0001\u0000"+
		"\u0000\u0000~\u007f\u0005S\u0000\u0000\u007f\u0080\u0005a\u0000\u0000"+
		"\u0080\u0081\u0005m\u0000\u0000\u0081\u0082\u0005s\u0000\u0000\u0082\u0083"+
		"\u0005t\u0000\u0000\u0083\u0084\u0005a\u0000\u0000\u0084\u0085\u0005g"+
		"\u0000\u0000\u0085\u0016\u0001\u0000\u0000\u0000\u0086\u0087\u0005S\u0000"+
		"\u0000\u0087\u0088\u0005o\u0000\u0000\u0088\u0089\u0005n\u0000\u0000\u0089"+
		"\u008a\u0005n\u0000\u0000\u008a\u008b\u0005t\u0000\u0000\u008b\u008c\u0005"+
		"a\u0000\u0000\u008c\u008d\u0005g\u0000\u0000\u008d\u0018\u0001\u0000\u0000"+
		"\u0000\u008e\u008f\u0005v\u0000\u0000\u008f\u0090\u0005o\u0000\u0000\u0090"+
		"\u0091\u0005r\u0000\u0000\u0091\u0092\u0005\u00c3\u0000\u0000\u0092\u0093"+
		"\u0005\u00bc\u0000\u0000\u0093\u0094\u0005b\u0000\u0000\u0094\u0095\u0005"+
		"e\u0000\u0000\u0095\u0096\u0005r\u0000\u0000\u0096\u0097\u0005g\u0000"+
		"\u0000\u0097\u0098\u0005e\u0000\u0000\u0098\u0099\u0005h\u0000\u0000\u0099"+
		"\u009a\u0005e\u0000\u0000\u009a\u009b\u0005n\u0000\u0000\u009b\u009c\u0005"+
		"d\u0000\u0000\u009c\u001a\u0001\u0000\u0000\u0000\u009d\u009e\u0005g\u0000"+
		"\u0000\u009e\u009f\u0005e\u0000\u0000\u009f\u00a0\u0005s\u0000\u0000\u00a0"+
		"\u00a1\u0005c\u0000\u0000\u00a1\u00a2\u0005h\u0000\u0000\u00a2\u00a3\u0005"+
		"l\u0000\u0000\u00a3\u00a4\u0005o\u0000\u0000\u00a4\u00a5\u0005s\u0000"+
		"\u0000\u00a5\u00a6\u0005s\u0000\u0000\u00a6\u00a7\u0005e\u0000\u0000\u00a7"+
		"\u00a8\u0005n\u0000\u0000\u00a8\u001c\u0001\u0000\u0000\u0000\u00a9\u00aa"+
		"\u0005b\u0000\u0000\u00aa\u00ab\u0005e\u0000\u0000\u00ab\u00ac\u0005i"+
		"\u0000\u0000\u00ac\u001e\u0001\u0000\u0000\u0000\u00ad\u00ae\u0005g\u0000"+
		"\u0000\u00ae\u00af\u0005u\u0000\u0000\u00af\u00b0\u0005t\u0000\u0000\u00b0"+
		"\u00b1\u0005e\u0000\u0000\u00b1\u00b2\u0005m\u0000\u0000\u00b2\u00b3\u0005"+
		" \u0000\u0000\u00b3\u00b4\u0005W\u0000\u0000\u00b4\u00b5\u0005e\u0000"+
		"\u0000\u00b5\u00b6\u0005t\u0000\u0000\u00b6\u00b7\u0005t\u0000\u0000\u00b7"+
		"\u00b8\u0005e\u0000\u0000\u00b8\u00b9\u0005r\u0000\u0000\u00b9 \u0001"+
		"\u0000\u0000\u0000\u00ba\u00bb\u0005U\u0000\u0000\u00bb\u00bc\u0005h\u0000"+
		"\u0000\u00bc\u00bd\u0005r\u0000\u0000\u00bd\"\u0001\u0000\u0000\u0000"+
		"\u00be\u00c0\u0007\u0001\u0000\u0000\u00bf\u00be\u0001\u0000\u0000\u0000"+
		"\u00c0\u00c1\u0001\u0000\u0000\u0000\u00c1\u00bf\u0001\u0000\u0000\u0000"+
		"\u00c1\u00c2\u0001\u0000\u0000\u0000\u00c2$\u0001\u0000\u0000\u0000\u00c3"+
		"\u00c4\u0003#\u0011\u0000\u00c4\u00c5\u0005.\u0000\u0000\u00c5\u00c7\u0007"+
		"\u0002\u0000\u0000\u00c6\u00c8\u0007\u0003\u0000\u0000\u00c7\u00c6\u0001"+
		"\u0000\u0000\u0000\u00c8\u00c9\u0001\u0000\u0000\u0000\u00c9\u00c7\u0001"+
		"\u0000\u0000\u0000\u00c9\u00ca\u0001\u0000\u0000\u0000\u00ca&\u0001\u0000"+
		"\u0000\u0000\u00cb\u00cc\u0003#\u0011\u0000\u00cc\u00cd\u0005.\u0000\u0000"+
		"\u00cd\u00ce\u0003#\u0011\u0000\u00ce\u00cf\u0005U\u0000\u0000\u00cf\u00d0"+
		"\u0005h\u0000\u0000\u00d0\u00d1\u0005r\u0000\u0000\u00d1(\u0001\u0000"+
		"\u0000\u0000\u00d2\u00d4\u0007\u0004\u0000\u0000\u00d3\u00d2\u0001\u0000"+
		"\u0000\u0000\u00d4\u00d5\u0001\u0000\u0000\u0000\u00d5\u00d3\u0001\u0000"+
		"\u0000\u0000\u00d5\u00d6\u0001\u0000\u0000\u0000\u00d6*\u0001\u0000\u0000"+
		"\u0000\u00d7\u00d8\u0005.\u0000\u0000\u00d8,\u0001\u0000\u0000\u0000\u00d9"+
		"\u00da\u0005,\u0000\u0000\u00da.\u0001\u0000\u0000\u0000\u00db\u00dc\u0005"+
		"-\u0000\u0000\u00dc0\u0001\u0000\u0000\u0000\u00dd\u00de\u0005:\u0000"+
		"\u0000\u00de2\u0001\u0000\u0000\u0000\u0005\u00006\u00c1\u00c9\u00d5\u0001"+
		"\u0006\u0000\u0000";
	public static final ATN _ATN =
		new ATNDeserializer().deserialize(_serializedATN.toCharArray());
	static {
		_decisionToDFA = new DFA[_ATN.getNumberOfDecisions()];
		for (int i = 0; i < _ATN.getNumberOfDecisions(); i++) {
			_decisionToDFA[i] = new DFA(_ATN.getDecisionState(i), i);
		}
	}
}